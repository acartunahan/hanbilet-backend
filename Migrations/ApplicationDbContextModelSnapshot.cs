// <auto-generated />
using System;
using BusTicketAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusTicketAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusTicketAPI.Models.Koltuk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Dolu")
                        .HasColumnType("bit");

                    b.Property<int>("KoltukNumarasi")
                        .HasColumnType("int");

                    b.Property<int>("SeferId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeferId");

                    b.HasIndex("UserId");

                    b.ToTable("Koltuklar");
                });

            modelBuilder.Entity("BusTicketAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("YourNamespace.Models.Bilet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KoltukNumarasi")
                        .HasColumnType("int");

                    b.Property<DateTime>("SatinAlmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeferId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeferId");

                    b.HasIndex("UserId");

                    b.ToTable("Biletler");
                });

            modelBuilder.Entity("YourNamespace.Models.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Firmalar");
                });

            modelBuilder.Entity("YourNamespace.Models.Otobus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int>("KoltukSayisi")
                        .HasColumnType("int");

                    b.Property<string>("OtobusModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.ToTable("Otobusler");
                });

            modelBuilder.Entity("YourNamespace.Models.Sefer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KalkisSehirId")
                        .HasColumnType("int");

                    b.Property<int>("OtobusId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Saat")
                        .HasColumnType("time");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("VarisSehirId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("KalkisSehirId");

                    b.HasIndex("OtobusId");

                    b.HasIndex("VarisSehirId");

                    b.ToTable("Seferler");
                });

            modelBuilder.Entity("YourNamespace.Models.SeferDuraklari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Durak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SeferId")
                        .HasColumnType("int");

                    b.Property<int>("Sira")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeferId");

                    b.ToTable("SeferDuraklari");
                });

            modelBuilder.Entity("YourNamespace.Models.Sehir", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SehirAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sehirler");
                });

            modelBuilder.Entity("BusTicketAPI.Models.Koltuk", b =>
                {
                    b.HasOne("YourNamespace.Models.Sefer", "Sefer")
                        .WithMany()
                        .HasForeignKey("SeferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Sefer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YourNamespace.Models.Bilet", b =>
                {
                    b.HasOne("YourNamespace.Models.Sefer", "Sefer")
                        .WithMany()
                        .HasForeignKey("SeferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sefer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YourNamespace.Models.Otobus", b =>
                {
                    b.HasOne("YourNamespace.Models.Firma", "Firma")
                        .WithMany("Otobusler")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("YourNamespace.Models.Sefer", b =>
                {
                    b.HasOne("YourNamespace.Models.Firma", "Firma")
                        .WithMany("Seferler")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YourNamespace.Models.Sehir", "KalkisSehir")
                        .WithMany()
                        .HasForeignKey("KalkisSehirId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("YourNamespace.Models.Otobus", "Otobus")
                        .WithMany("Seferler")
                        .HasForeignKey("OtobusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YourNamespace.Models.Sehir", "VarisSehir")
                        .WithMany()
                        .HasForeignKey("VarisSehirId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("KalkisSehir");

                    b.Navigation("Otobus");

                    b.Navigation("VarisSehir");
                });

            modelBuilder.Entity("YourNamespace.Models.SeferDuraklari", b =>
                {
                    b.HasOne("YourNamespace.Models.Sefer", "Sefer")
                        .WithMany("Duraklar")
                        .HasForeignKey("SeferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sefer");
                });

            modelBuilder.Entity("YourNamespace.Models.Firma", b =>
                {
                    b.Navigation("Otobusler");

                    b.Navigation("Seferler");
                });

            modelBuilder.Entity("YourNamespace.Models.Otobus", b =>
                {
                    b.Navigation("Seferler");
                });

            modelBuilder.Entity("YourNamespace.Models.Sefer", b =>
                {
                    b.Navigation("Duraklar");
                });
#pragma warning restore 612, 618
        }
    }
}
